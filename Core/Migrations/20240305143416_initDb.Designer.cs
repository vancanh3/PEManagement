// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersionalExpenditureManagement.PE.DbContext;

#nullable disable

namespace PersionalExpenditureManagement.Migrations
{
    [DbContext(typeof(PEDbContext))]
    [Migration("20240305143416_initDb")]
    partial class initDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PersionalExpenditureManagement.PE.DbContext.Models.AmountPerCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("AmountExpected")
                        .HasColumnType("float");

                    b.Property<int>("SpendingCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpendingCategoryId");

                    b.ToTable("AmountPerCategorys");
                });

            modelBuilder.Entity("PersionalExpenditureManagement.PE.DbContext.Models.AmountPerMonthDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MonthOfSpendingId")
                        .HasColumnType("int");

                    b.Property<double>("TotalAmountRemaining")
                        .HasColumnType("float");

                    b.Property<double>("TotalRevenue")
                        .HasColumnType("float");

                    b.Property<double>("TotalSpending")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MonthOfSpendingId");

                    b.HasIndex("UserId");

                    b.ToTable("AmountPerMonthDetails");
                });

            modelBuilder.Entity("PersionalExpenditureManagement.PE.DbContext.Models.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CurrentAmount")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("PersionalExpenditureManagement.PE.DbContext.Models.CurrentActualCashAmount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("CurrentCashAmount")
                        .HasColumnType("float");

                    b.Property<int>("MonthOfSpendingId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MonthOfSpendingId");

                    b.HasIndex("UserId");

                    b.ToTable("CurrentActualCashAmounts");
                });

            modelBuilder.Entity("PersionalExpenditureManagement.PE.DbContext.Models.MonthOfSpending", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("MonthName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearOfMonth")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MonthOfSpendings");
                });

            modelBuilder.Entity("PersionalExpenditureManagement.PE.DbContext.Models.SpendingActualPerDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MonthOfSpendingId")
                        .HasColumnType("int");

                    b.Property<double>("TotalSpedingAmount")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MonthOfSpendingId");

                    b.HasIndex("UserId");

                    b.ToTable("SpendingActualPerDays");
                });

            modelBuilder.Entity("PersionalExpenditureManagement.PE.DbContext.Models.SpendingByDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("AmountSpending")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateOfSpending")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MonthOfSpendingId")
                        .HasColumnType("int");

                    b.Property<int>("SpendingCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MonthOfSpendingId");

                    b.HasIndex("SpendingCategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("SpendingByDays");
                });

            modelBuilder.Entity("PersionalExpenditureManagement.PE.DbContext.Models.SpendingCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("SpendingCategorys");
                });

            modelBuilder.Entity("PersionalExpenditureManagement.PE.DbContext.Models.TotalAmountCategoryPerMonth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MonthOfSpendingId")
                        .HasColumnType("int");

                    b.Property<int>("SpendingCategoryId")
                        .HasColumnType("int");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MonthOfSpendingId");

                    b.HasIndex("SpendingCategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("TotalAmountCategoryPerMonths");
                });

            modelBuilder.Entity("PersionalExpenditureManagement.PE.DbContext.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PersionalExpenditureManagement.PE.DbContext.Models.UserSpendingPerMonth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MonthOfSpendingId")
                        .HasColumnType("int");

                    b.Property<int>("SpendingCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MonthOfSpendingId");

                    b.HasIndex("SpendingCategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSpendingPerMonths");
                });

            modelBuilder.Entity("PersionalExpenditureManagement.PE.DbContext.Models.WithdrawHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BankId")
                        .HasColumnType("int");

                    b.Property<double>("WithdrawAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("WithdrawDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("WithdrawHistorys");
                });

            modelBuilder.Entity("PersionalExpenditureManagement.PE.DbContext.Models.AmountPerCategory", b =>
                {
                    b.HasOne("PersionalExpenditureManagement.PE.DbContext.Models.SpendingCategory", "SpendingCategory")
                        .WithMany()
                        .HasForeignKey("SpendingCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SpendingCategory");
                });

            modelBuilder.Entity("PersionalExpenditureManagement.PE.DbContext.Models.AmountPerMonthDetail", b =>
                {
                    b.HasOne("PersionalExpenditureManagement.PE.DbContext.Models.MonthOfSpending", "MonthOfSpending")
                        .WithMany()
                        .HasForeignKey("MonthOfSpendingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersionalExpenditureManagement.PE.DbContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonthOfSpending");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PersionalExpenditureManagement.PE.DbContext.Models.BankAccount", b =>
                {
                    b.HasOne("PersionalExpenditureManagement.PE.DbContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PersionalExpenditureManagement.PE.DbContext.Models.CurrentActualCashAmount", b =>
                {
                    b.HasOne("PersionalExpenditureManagement.PE.DbContext.Models.MonthOfSpending", "MonthOfSpending")
                        .WithMany()
                        .HasForeignKey("MonthOfSpendingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersionalExpenditureManagement.PE.DbContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonthOfSpending");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PersionalExpenditureManagement.PE.DbContext.Models.SpendingActualPerDay", b =>
                {
                    b.HasOne("PersionalExpenditureManagement.PE.DbContext.Models.MonthOfSpending", "MonthOfSpending")
                        .WithMany()
                        .HasForeignKey("MonthOfSpendingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersionalExpenditureManagement.PE.DbContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonthOfSpending");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PersionalExpenditureManagement.PE.DbContext.Models.SpendingByDay", b =>
                {
                    b.HasOne("PersionalExpenditureManagement.PE.DbContext.Models.MonthOfSpending", "MonthOfSpending")
                        .WithMany()
                        .HasForeignKey("MonthOfSpendingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersionalExpenditureManagement.PE.DbContext.Models.SpendingCategory", "SpendingCategory")
                        .WithMany()
                        .HasForeignKey("SpendingCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersionalExpenditureManagement.PE.DbContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonthOfSpending");

                    b.Navigation("SpendingCategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PersionalExpenditureManagement.PE.DbContext.Models.TotalAmountCategoryPerMonth", b =>
                {
                    b.HasOne("PersionalExpenditureManagement.PE.DbContext.Models.MonthOfSpending", "MonthOfSpending")
                        .WithMany()
                        .HasForeignKey("MonthOfSpendingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersionalExpenditureManagement.PE.DbContext.Models.SpendingCategory", "SpendingCategory")
                        .WithMany()
                        .HasForeignKey("SpendingCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersionalExpenditureManagement.PE.DbContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonthOfSpending");

                    b.Navigation("SpendingCategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PersionalExpenditureManagement.PE.DbContext.Models.UserSpendingPerMonth", b =>
                {
                    b.HasOne("PersionalExpenditureManagement.PE.DbContext.Models.MonthOfSpending", "MonthOfSpending")
                        .WithMany()
                        .HasForeignKey("MonthOfSpendingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersionalExpenditureManagement.PE.DbContext.Models.SpendingCategory", "SpendingCategory")
                        .WithMany()
                        .HasForeignKey("SpendingCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersionalExpenditureManagement.PE.DbContext.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MonthOfSpending");

                    b.Navigation("SpendingCategory");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PersionalExpenditureManagement.PE.DbContext.Models.WithdrawHistory", b =>
                {
                    b.HasOne("PersionalExpenditureManagement.PE.DbContext.Models.BankAccount", "BankAccount")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankAccount");
                });
#pragma warning restore 612, 618
        }
    }
}
